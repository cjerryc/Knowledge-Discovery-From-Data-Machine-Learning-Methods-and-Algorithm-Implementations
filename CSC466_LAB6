{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1wXvcWAp72TyugfjihqhFZ86kU8wDduMp","authorship_tag":"ABX9TyOYiHpAN0QSU91KhwBsOtKb"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NYzWl_xs5OcY","executionInfo":{"status":"ok","timestamp":1709324461971,"user_tz":480,"elapsed":3181,"user":{"displayName":"Jerry Chang","userId":"16741169191998840800"}},"outputId":"d57a9f91-b950-4f3f-9b2c-c079d8f789ca"},"outputs":[{"output_type":"stream","name":"stdout","text":["Please enter a K between 1 and 5 to run LOOCV on K-Nearest Neighbors: 2\n","The predicted y-value for the input x: 1 is: 1.0\n","The predicted y-value for the input x: 2 is: 2.0\n","The predicted y-value for the input x: 0 is: 1.5\n","The predicted y-value for the input x: 4 is: 2.5\n","The predicted y-value for the input x: 3 is: 3.0\n","The LOOCV MSE for 2-neighbors is 0.9.\n"]}],"source":["from math import dist\n","import pandas as pd\n","\n","\n","def get_coords_from_csv(fileName):\n","    df = pd.read_csv(fileName)\n","    df = df.drop(['Unnamed: 0'], axis=1)\n","\n","    coords = []\n","    for i in range(df.shape[0]):\n","        ser = pd.Series(df.iloc[i])\n","        coords.append((ser.iloc[0], ser.iloc[1]))\n","\n","    return coords\n","\n","\n","def rearrange_by_x(datapoints):\n","    return sorted(datapoints)\n","\n","\n","def compute_distance(x1, x2):\n","    return dist([x1], [x2])\n","\n","\n","def take_input():\n","    k_val = int(input(\"Please enter a K between 1 and 5 to run LOOCV on K-Nearest Neighbors: \"))\n","    while k_val < 1 or k_val > 5:\n","        k_val = int(input(\"Please enter a K between 1 and 5 to run run LOOCV on K-Nearest Neighbors: \"))\n","    return k_val\n","\n","\n","def knn(coordinates, k, x):\n","    sorted_data = rearrange_by_x(coordinates)\n","    dist_arr = []\n","    k_arr = []  # Keep track of k-nearest neighbors INDICES from sorted_data\n","    for i in range(len(sorted_data)):    # Compute distances and store in array, indices correspond to datapoint indices\n","        individual_distance = compute_distance(x, sorted_data[i][0])\n","        dist_arr.append(individual_distance)\n","    for i in range(len(sorted_data)):\n","        if len(k_arr) < k:  # Firstly, Populate K_arr with K elements\n","            k_arr.append(i)\n","        else:           # Then, Find the largest value in K_arr and replace it with a new index, i, if the largest distance of a K_arr index > dist_arr[i]\n","            largest_neighbor_in_k_index = 0  # Iterate and find the largest distance in K_arr between input point x and the indices stored in K_arr\n","            for j in range(len(k_arr)):\n","                if dist_arr[k_arr[j]] > dist_arr[k_arr[largest_neighbor_in_k_index]]:\n","                    largest_neighbor_in_k_index = j\n","            if dist_arr[k_arr[largest_neighbor_in_k_index]] > dist_arr[i]:\n","                k_arr[largest_neighbor_in_k_index] = i\n","    ksum = 0                        # Compute the average and return y_pred\n","    for i in range(len(k_arr)):\n","        ksum += sorted_data[k_arr[i]][1]\n","    y_pred = ksum / k\n","    return y_pred, x\n","\n","\n","def LOOCV(fileName):\n","    k = take_input()\n","    coordinates = get_coords_from_csv(fileName)\n","    MSE = 0\n","    for i in range(len(coordinates)):\n","        # Leave one point out each iteration\n","        LOOCV_coords = coordinates[:i] + coordinates[i + 1:]\n","        Y_pred, x_input = knn(LOOCV_coords, k, coordinates[i][0])\n","        print(f\"The predicted y-value for the input x: {x_input} is: {Y_pred}\")\n","        # MSE = (SUM(Y_i - Y_predicted)^2 ) / num_of_datapoints\n","        Y_i = coordinates[i][1]\n","        MSE += (Y_i - Y_pred) ** 2\n","    print(f\"The LOOCV MSE for {k}-neighbors is {MSE/len(coordinates)}.\")\n","\n","\n","fileName = '/content/drive/MyDrive/lab6 - Sheet1.csv'\n","LOOCV(fileName)\n","\n","\n"]}]}